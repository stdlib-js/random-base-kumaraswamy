// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";var f=u.isPrimitive,g=p;var j=function(e,t){return f(e)?f(t)?null:new TypeError(g("invalid argument. `%s` must be a positive number. Value: `%s`.","b",t)):new TypeError(g("invalid argument. `%s` must be a positive number. Value: `%s`.","a",e))},c=h;var b=function(e,t,n){var s=e();return c(1-c(1-s,1/n),1/t)},v=e,y=t,w=n,x=s,L=r,N=i,E=o,O=m,T=a.factory,P=d,V=l,G=p,R=j,A=b;var J=function(){var e,t,n,s,r,i;if(0===arguments.length)t=T();else if(1===arguments.length){if(!x(e=arguments[0]))throw new TypeError(G("invalid argument. Options argument must be an object. Value: `%s`.",e));if(N(e,"prng")){if(!L(e.prng))throw new TypeError(G("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=T(e)}else{if(s=R(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!x(e=arguments[2]))throw new TypeError(G("invalid argument. Options argument must be an object. Value: `%s`.",e));if(N(e,"prng")){if(!L(e.prng))throw new TypeError(G("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=T(e)}else t=T()}return v(n=void 0===r?f:h,"NAME","kumaraswamy"),e&&e.prng?(v(n,"seed",null),v(n,"seedLength",null),w(n,"state",E(null),O),v(n,"stateLength",null),v(n,"byteLength",null),v(n,"toJSON",E(null)),v(n,"PRNG",t)):(y(n,"seed",o),y(n,"seedLength",m),w(n,"state",l,p),y(n,"stateLength",a),y(n,"byteLength",d),v(n,"toJSON",u),v(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function a(){return t.stateLength}function d(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=V(t.state),e.params=void 0===r?[]:[r,i],e}function h(){return A(t,r,i)}function f(e,n){return P(e)||P(n)||e<=0||n<=0?NaN:A(t,e,n)}},M=J(),S=J;e(M,"factory",S);var k=M;export{k as default,S as factory};
//# sourceMappingURL=index.mjs.map
