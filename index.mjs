// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";var f=u.isPrimitive;var g=function(e,t){return f(e)?f(t)?null:new TypeError("invalid argument. `b` must be a positive number. Value: `"+t+"`."):new TypeError("invalid argument. `a` must be a positive number. Value: `"+e+"`.")},j=h;var c=function(e,t,n){var s=e();return j(1-j(1-s,1/n),1/t)},b=e,v=t,y=n,w=s,x=r,L=i,N=o,E=m,O=a.factory,T=d,P=l,V=p,G=g,R=c;var A=function(){var e,t,n,s,r,i;if(0===arguments.length)t=O();else if(1===arguments.length){if(!w(e=arguments[0]))throw new TypeError(V("invalid argument. Options argument must be an object. Value: `%s`.",e));if(L(e,"prng")){if(!x(e.prng))throw new TypeError(V("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=O(e)}else{if(s=G(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!w(e=arguments[2]))throw new TypeError(V("invalid argument. Options argument must be an object. Value: `%s`.",e));if(L(e,"prng")){if(!x(e.prng))throw new TypeError(V("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=O(e)}else t=O()}return b(n=void 0===r?f:h,"NAME","kumaraswamy"),e&&e.prng?(b(n,"seed",null),b(n,"seedLength",null),y(n,"state",N(null),E),b(n,"stateLength",null),b(n,"byteLength",null),b(n,"toJSON",N(null)),b(n,"PRNG",t)):(v(n,"seed",o),v(n,"seedLength",m),y(n,"state",l,p),v(n,"stateLength",a),v(n,"byteLength",d),b(n,"toJSON",u),b(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function a(){return t.stateLength}function d(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=P(t.state),e.params=void 0===r?[]:[r,i],e}function h(){return R(t,r,i)}function f(e,n){return T(e)||T(n)||e<=0||n<=0?NaN:R(t,e,n)}},J=A(),M=A;e(J,"factory",M);var S=J;export{S as default,M as factory};
//# sourceMappingURL=index.mjs.map
